package presenters

import (
	"{{.Repo}}/{{.Project}}/pkg/api"
	"{{.Repo}}/{{.Project}}/pkg/api/openapi"
	"{{.Repo}}/{{.Project}}/pkg/util"
)

func Convert{{.Kind}}({{.KindLowerSingular}} openapi.{{.Kind}}) *api.{{.Kind}} {
	c := &api.{{.Kind}}{
		Meta: api.Meta{
			ID: util.NilToEmptyString({{.KindLowerSingular}}.Id),
		},
	}

	if {{.KindLowerSingular}}.CreatedAt != nil {
		c.CreatedAt = *{{.KindLowerSingular}}.CreatedAt
		c.UpdatedAt = *{{.KindLowerSingular}}.UpdatedAt
	}

	return c
}

func Present{{.Kind}}({{.KindLowerSingular}} *api.{{.Kind}}) openapi.{{.Kind}} {
	reference := PresentReference({{.KindLowerSingular}}.ID, {{.KindLowerSingular}})
	return openapi.{{.Kind}}{
		Id:        reference.Id,
		Kind:      reference.Kind,
		Href:      reference.Href,
		CreatedAt: openapi.PtrTime({{.KindLowerSingular}}.CreatedAt),
		UpdatedAt: openapi.PtrTime({{.KindLowerSingular}}.UpdatedAt),
	}
}
